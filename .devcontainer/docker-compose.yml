version: '3'

services:
  python:
    image: python:3.9-slim
    volumes:
      - .:/app
    working_dir: /app
    command: /bin/bash
    depends_on:
      - postgres
      - elasticsearch

  postgres:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data


  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL} # from .env
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD} # from .env
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
    environment:
      discovery.type: single-node
    ports:
      - "9200:9200"
    user: "elasticsearch"

  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.0
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

  kafka:
    image: confluentinc/cp-kafka:latest
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  nifi:
    build: 
      context: .
      dockerfile: ./nifi/Dockerfile.nifi
    ports:
      - "8443:8443"
    environment:
      - NIFI_WEB_HTTP_PORT=8443

  # spark:
  #   image: bitnami/spark:latest
  #   environment:
  #     - SPARK_MODE=master
  #   ports:
  #     - "8081:8080"  
  #   command: /opt/bitnami/scripts/spark/entrypoint.sh /opt/bitnami/scripts/spark/run.sh

  redis:
    image: redis:latest
    ports:
      - "6379:6379"

  airflow-webserver:
    build: 
      context: .
      dockerfile: ./airflow/webserver/Dockerfile.airflow
    entrypoint: ["/entrypoint.sh"]
    mem_limit: 6g  # Allocate 2GB of memory
    environment:
      - AIRFLOW__CORE__FERNET_KEY= ${AIRFLOW_FERNET_KEY}
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/data_engineering_with_python
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/data_engineering_with_python
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
      - AIRFLOW_USERNAME=${AIRFLOW_USERNAME}
      - AIRFLOW_FIRSTNAME=${AIRFLOW_FIRSTNAME:-John}
      - AIRFLOW_LASTNAME=${AIRFLOW_LASTNAME:-Doe}
      - AIRFLOW_ROLE=${AIRFLOW_ROLE:-Admin}
      - AIRFLOW_EMAIL=${AIRFLOW_EMAIL:-admin@example.com}
      - AIRFLOW_PASSWORD=${AIRFLOW_PASSWORD:-admin}
      - AIRFLOW__LOGGING__LOGGING_LEVEL=DEBUG
    depends_on:
      - postgres
      - redis
      - airflow-scheduler
    volumes:
      - ../airflow:/opt/airflow
    ports:
      - "8080:8080"

  airflow-scheduler:
    image: apache/airflow:2.7.1-python3.9
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/data_engineering_with_python
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/data_engineering_with_python
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
    depends_on:
      - postgres
      - redis
    volumes:
      - ../airflow:/opt/airflow
    command: scheduler

  airflow-worker:
    build: 
      context: .
      dockerfile: ./airflow/worker/Dockerfile.airflow
    entrypoint: ["/entrypoint.sh"]
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/data_engineering_with_python
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/data_engineering_with_python
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
    depends_on:
      - airflow-webserver
    volumes:
      - ../airflow:/opt/airflow

volumes:
  postgres_data:
  dags_folder:
  pgadmin_data:
